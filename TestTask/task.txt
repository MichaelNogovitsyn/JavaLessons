Добрый день,

Тестовое задание для оценки вашего уровня программирования и самостоятельного подхода

к решению задачи. Задачу можно выполнить на любом языке программирования, в т.ч. на псевдокоде.

Требуется разработать функцию, которая будет принимать как параметр целое число.
Функция будет работать круглосуточно и вызывать внешней подпрограммой каждые 100 мс.
Если каких-то данных в условии не хватает, выбирайте любой самый простой вариант на ваш вкус.

Для потока входных значений при каждом вызове функции нужно сделать следующее:
1. реализовать скользящий буфер на 10 последних значений
2. отсечь минимальное и максимальное значение
3. посчитать медиану, среднее арифметическое и дисперсию по оставшимся значениям

Задача рассчитана на 1 час, уровень соответствует  базовой программе по программированию вуза.
Срок решения задачи - по возможности.
От вас я жду решение задачи на любом языке + перечень недостающих
исходных данных и какие решения вы приняли по ним.

Написать функцию на Java которая должна работать круглосуточно и вызываться внешней подпрограммой каждые 100 мс.
Написать Внешнюю функцию на  которая должна работать круглосуточно и вызывать подпрограмму каждые 100 мс.
Для потока входных значений при каждом вызове функции нужно сделать следующее:
1. реализовать скользящий буфер на 10 последних значений
2. отсечь минимальное и максимальное значение
3. посчитать медиану, среднее арифметическое и дисперсию по оставшимся значениям

Кольцевой буфер-это эффективный буфер FIFO. Он использует массив фиксированного размера, который может быть предварительно выделен заранее и обеспечивает эффективный шаблон доступа к памяти. Все буферные операции являются постоянными по времени O(1) , включая потребление элемента, так как для этого не требуется смещение элементов.

С другой стороны, определение правильного размера кольцевого буфера имеет решающее значение. Например, операции записи могут блокироваться в течение длительного времени, если размер буфера невелик, а чтение происходит медленно. Мы можем использовать динамический размер, но для этого потребуется перемещение данных, и мы упустим большинство преимуществ, описанных выше.